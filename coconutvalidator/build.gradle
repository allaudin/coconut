buildscript {

    ext.kotlin_version = '1.2.71'

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'maven'

version = rootProject.ext.version

repositories {
    google()
    jcenter()
}

android {

    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "${version}"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

configurations {
    javadocDeps
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:design:28.0.0'
    javadocDeps 'com.google.android:annotations:4.1.1.4'
    implementation 'com.google.android:annotations:4.1.1.4'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-all:1.10.19'

}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

assemble.dependsOn 'sourcesJar'

tasks.bintrayUpload.dependsOn 'uploadArchives'
tasks.uploadArchives.dependsOn 'assemble'


bintray {

    user = "${rootProject.user}"
    key = "${rootProject.key}"

    publish = rootProject.ext.publish
    override = rootProject.ext.override

    pkg {

        filesSpec {
            into "."
            from 'build/release'
        } // fileSpecs

        repo = "${rootProject.repo}"
        name = "${project.name}"
        licenses = rootProject.ext.licenses

        //noinspection GroovyAssignabilityCheck
        version {
            name = "${project.version}"
            released  = new Date()
            vcsTag = "${project.version}"
        } // version

    } // pkg

} // bintray


uploadArchives {
    repositories.mavenDeployer {
        pom.groupId = rootProject.ext.groupId
        pom.artifactId = project.name
        pom.version = project.version
        repository(url: "file://${buildDir}/release")
    }
}

